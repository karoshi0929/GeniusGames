0. 패킷 구조 수정사항.
- 헤더는 2바이트 고정.
- 헤더에 패킷body의 크기, body엔 실제 데이터가 들어감

/// <summary>  
/// 소켓 버퍼로부터 데이터를 수신할 때 마다 호출된다.  
/// 데이터가 남아 있을 때 까지 계속 패킷을 만들어 callback을 호출 해 준다.  
/// 하나의 패킷을 완성하지 못했다면 버퍼에 보관해 놓은 뒤 다음 수신을 기다린다.  
/// </summary>  
/// <param name="buffer"></param>  
/// <param name="offset"></param>  
/// <param name="transffered"></param>
// 이번 receive로 읽어오게 될 바이트 수.  
    this.remain_bytes = transffered;  
  
    // 원본 버퍼의 포지션값.  
    // 패킷이 여러개 뭉쳐 올 경우 원본 버퍼의 포지션은 계속 앞으로 가야 하는데 그 처리를 위한 변수이다.  
    int src_position = offset;  
  
    // 남은 데이터가 있다면 계속 반복한다.  
    while (this.remain_bytes > 0)  
    {  
        bool completed = false;  
  
        // 헤더만큼 못읽은 경우 헤더를 먼저 읽는다.  
        if (this.current_position < Defines.HEADERSIZE)  
        {  
            // 목표 지점 설정(헤더 위치까지 도달하도록 설정).  
            this.position_to_read = Defines.HEADERSIZE;  
  
            completed = read_until(buffer, ref src_position, offset, transffered);  
            if (!completed)  
            {  
                // 아직 다 못읽었으므로 다음 receive를 기다린다.  
                return;  
            }  
  
            // 헤더 하나를 온전히 읽어왔으므로 메시지 사이즈를 구한다.  
            this.message_size = get_body_size();  
  
            // 다음 목표 지점(헤더 + 메시지 사이즈).  
            this.position_to_read = this.message_size + Defines.HEADERSIZE;  
        }  
  
        // 메시지를 읽는다.  
        completed = read_until(buffer, ref src_position, offset, transffered);  
  
        if (completed)  
        {  
            // 패킷 하나를 완성 했다.  
            callback(new Const<byte[]>(this.message_buffer));  
  
            clear_buffer();  
        }  
    } 


1. 클라이언트 로그인 시, ClientList 클래스에 클라이언트 정보 저장(로그인 데이터 처리)
1-1. RoomManager 클래스 생성.
1-2. Room1,2,3...N 클래스 생성.

2. 클라이언트가 매칭 요청 보냈을 시 메세지 수신 후, 매칭완료 메세지 전송(매칭 데이터 처리)

3. 클라이언트가 게임진행 관련 메세지 보낼 시 수신 후, 메세지 처리(게임 데이터 처리)





현제 HandleGamePacket이 정의 되어있지 않다고 오류 뜸
해결방법 - PacketDefine클래스에서 HandleGamePacket 구조체에서 startGame, card, playerTurn 변수를 지워서 컴파일 후,
다시 되돌려놓고 컴파일하면 실행됨.